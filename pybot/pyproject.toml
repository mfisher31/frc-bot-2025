#
# Use this configuration file to control what RobotPy packages are installed
# on your RoboRIO
#

[tool.robotpy]

# Version of robotpy this project depends on
robotpy_version = "2025.3.1.1"

# Which extra RobotPy components should be installed
# -> equivalent to `pip install robotpy[extra1, ...]
robotpy_extras = [
    # "all",
    "apriltag",
    "commands2",
    "cscore",
    # "navx",
    "pathplannerlib",
    # "phoenix5",
    # "phoenix6",
    "rev",
    # "romi",
    # "sim",
    # "xrp",
]

# Other pip packages to install
requires = [
    'limelightlib-python',
    'phoenix6',
    'sleipnirgroup-choreolib',
    'robotpy-cscore',
    'robotpy-apriltag',
]

#################
# robotpy-build #
#################

# TODO: this section isn't finished yet. It was added to have in place
# for when we're ready.

# This section tells pip to install robotpy-build before starting a build
[build-system]
requires = ["robotpy-build"]

# Tells robotpy-build where to place autogenerated metadata
[tool.robotpy-build]
base_package = "rpydemo"

# This section configures the 'rpydemo' python package. Multiple
# sections are possible to build multiple packages
[tool.robotpy-build.wrappers."rpydemo"]
name = "rpydemo"

# C++ source files to compile, path is relative to the root of the project
sources = [
    "src/robot.cpp"
]


# This is a directory that can be used to customize the autogenerated
# C++ code
# -> autogenerate those files via `robotpy-build create-gen`
generation_data = "gen"

# This tells robotpy-build to parse include/demo.h and autogenerate pybind11
# wrappers for the contents of the header.
# -> autogenerate this via `robotpy-build scan-headers`
# [tool.robotpy-build.wrappers."rpydemo".autogen_headers]
# demo = "demo.h"

# Standard python package metadata
[tool.robotpy-build.metadata]
name = "robotpy-build-demo"
description = "robotpy-build demo program"
author = "RobotPy Development Team"
author_email = "robotpy@googlegroups.com"
url = "https://github.com/robotpy/robotpy-build"
license = "BSD-3-Clause"
install_requires = []
